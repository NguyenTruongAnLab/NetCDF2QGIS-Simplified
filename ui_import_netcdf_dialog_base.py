# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_NetCDF2GISDialogBase(object):
    def setupUi(self, NetCDF2GISDialogBase):
        NetCDF2GISDialogBase.setObjectName("NetCDF2GISDialogBase")
        NetCDF2GISDialogBase.resize(968, 672)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(NetCDF2GISDialogBase.sizePolicy().hasHeightForWidth())
        NetCDF2GISDialogBase.setSizePolicy(sizePolicy)
        NetCDF2GISDialogBase.setSizeGripEnabled(False)
        self.label_title = QtWidgets.QLabel(NetCDF2GISDialogBase)
        self.label_title.setGeometry(QtCore.QRect(10, 10, 321, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setUnderline(True)
        self.label_title.setFont(font)
        self.label_title.setObjectName("label_title")
        self.Button_quit = QtWidgets.QPushButton(NetCDF2GISDialogBase)
        self.Button_quit.setGeometry(QtCore.QRect(880, 20, 81, 31))
        self.Button_quit.setObjectName("Button_quit")
        self.message_bottom_display = QtWidgets.QLabel(NetCDF2GISDialogBase)
        self.message_bottom_display.setGeometry(QtCore.QRect(50, 640, 841, 21))
        self.message_bottom_display.setObjectName("message_bottom_display")
        self.Button_clear_bottom_line = QtWidgets.QPushButton(NetCDF2GISDialogBase)
        self.Button_clear_bottom_line.setGeometry(QtCore.QRect(10, 640, 31, 23))
        self.Button_clear_bottom_line.setAutoFillBackground(False)
        self.Button_clear_bottom_line.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("%APPDATA%\\QGIS\\QGIS3\\profiles\\default\\python\\plugins\\NetCDF2QGIS\\../../../../../../../../../.designer/bathyscaf/refresh.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Button_clear_bottom_line.setIcon(icon)
        self.Button_clear_bottom_line.setObjectName("Button_clear_bottom_line")
        self.tabWidget_variables = QtWidgets.QTabWidget(NetCDF2GISDialogBase)
        self.tabWidget_variables.setGeometry(QtCore.QRect(410, 90, 551, 541))
        self.tabWidget_variables.setToolTipDuration(-4)
        self.tabWidget_variables.setAutoFillBackground(False)
        self.tabWidget_variables.setTabPosition(QtWidgets.QTabWidget.North)
        self.tabWidget_variables.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tabWidget_variables.setElideMode(QtCore.Qt.ElideNone)
        self.tabWidget_variables.setObjectName("tabWidget_variables")
        self.tab_variables = QtWidgets.QWidget()
        self.tab_variables.setObjectName("tab_variables")
        self.tableWidget_variables = QtWidgets.QTableWidget(self.tab_variables)
        self.tableWidget_variables.setGeometry(QtCore.QRect(0, 20, 541, 501))
        self.tableWidget_variables.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tableWidget_variables.setAcceptDrops(True)
        self.tableWidget_variables.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.tableWidget_variables.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.tableWidget_variables.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustIgnored)
        self.tableWidget_variables.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tableWidget_variables.setProperty("showDropIndicator", False)
        self.tableWidget_variables.setDragDropOverwriteMode(False)
        self.tableWidget_variables.setDragDropMode(QtWidgets.QAbstractItemView.DropOnly)
        self.tableWidget_variables.setDefaultDropAction(QtCore.Qt.IgnoreAction)
        self.tableWidget_variables.setAlternatingRowColors(False)
        self.tableWidget_variables.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.tableWidget_variables.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.tableWidget_variables.setGridStyle(QtCore.Qt.DashLine)
        self.tableWidget_variables.setWordWrap(False)
        self.tableWidget_variables.setCornerButtonEnabled(False)
        self.tableWidget_variables.setObjectName("tableWidget_variables")
        self.tableWidget_variables.setColumnCount(4)
        self.tableWidget_variables.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_variables.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_variables.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_variables.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_variables.setHorizontalHeaderItem(3, item)
        self.tableWidget_variables.horizontalHeader().setCascadingSectionResizes(True)
        self.tableWidget_variables.horizontalHeader().setDefaultSectionSize(90)
        self.tableWidget_variables.horizontalHeader().setMinimumSectionSize(20)
        self.tableWidget_variables.horizontalHeader().setSortIndicatorShown(True)
        self.tableWidget_variables.horizontalHeader().setStretchLastSection(True)
        self.tableWidget_variables.verticalHeader().setVisible(False)
        self.tableWidget_variables.verticalHeader().setCascadingSectionResizes(False)
        self.tableWidget_variables.verticalHeader().setDefaultSectionSize(40)
        self.tableWidget_variables.verticalHeader().setHighlightSections(False)
        self.tableWidget_variables.verticalHeader().setStretchLastSection(False)
        self.tabWidget_variables.addTab(self.tab_variables, "")
        self.tab_attributs = QtWidgets.QWidget()
        self.tab_attributs.setObjectName("tab_attributs")
        self.textBrowser_metadata = QtWidgets.QTextBrowser(self.tab_attributs)
        self.textBrowser_metadata.setGeometry(QtCore.QRect(0, 0, 541, 521))
        self.textBrowser_metadata.setAutoFillBackground(False)
        self.textBrowser_metadata.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.textBrowser_metadata.setFrameShadow(QtWidgets.QFrame.Plain)
        self.textBrowser_metadata.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.textBrowser_metadata.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.textBrowser_metadata.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.textBrowser_metadata.setObjectName("textBrowser_metadata")
        self.tabWidget_variables.addTab(self.tab_attributs, "")
        self.tab_options = QtWidgets.QWidget()
        self.tab_options.setObjectName("tab_options")
        self.comboBox_projection = QtWidgets.QComboBox(self.tab_options)
        self.comboBox_projection.setGeometry(QtCore.QRect(90, 40, 141, 22))
        self.comboBox_projection.setObjectName("comboBox_projection")
        self.label_projection = QtWidgets.QLabel(self.tab_options)
        self.label_projection.setGeometry(QtCore.QRect(20, 40, 71, 20))
        self.label_projection.setObjectName("label_projection")
        self.lineEdit_temp_dir = QtWidgets.QLineEdit(self.tab_options)
        self.lineEdit_temp_dir.setGeometry(QtCore.QRect(20, 162, 311, 20))
        self.lineEdit_temp_dir.setObjectName("lineEdit_temp_dir")
        self.label_temp_dir = QtWidgets.QLabel(self.tab_options)
        self.label_temp_dir.setGeometry(QtCore.QRect(20, 142, 151, 20))
        self.label_temp_dir.setObjectName("label_temp_dir")
        self.Button_temp_dir = QtWidgets.QPushButton(self.tab_options)
        self.Button_temp_dir.setGeometry(QtCore.QRect(340, 162, 41, 23))
        self.Button_temp_dir.setObjectName("Button_temp_dir")
        self.Button_clean_temp = QtWidgets.QToolButton(self.tab_options)
        self.Button_clean_temp.setGeometry(QtCore.QRect(450, 160, 81, 25))
        self.Button_clean_temp.setObjectName("Button_clean_temp")
        self.lineEdit_out_dir = QtWidgets.QLineEdit(self.tab_options)
        self.lineEdit_out_dir.setGeometry(QtCore.QRect(20, 300, 311, 20))
        self.lineEdit_out_dir.setObjectName("lineEdit_out_dir")
        self.label_out_dir = QtWidgets.QLabel(self.tab_options)
        self.label_out_dir.setGeometry(QtCore.QRect(20, 280, 151, 20))
        self.label_out_dir.setObjectName("label_out_dir")
        self.Button_out_dir = QtWidgets.QPushButton(self.tab_options)
        self.Button_out_dir.setGeometry(QtCore.QRect(340, 300, 41, 23))
        self.Button_out_dir.setObjectName("Button_out_dir")
        self.Button_in_dir = QtWidgets.QPushButton(self.tab_options)
        self.Button_in_dir.setGeometry(QtCore.QRect(340, 250, 41, 23))
        self.Button_in_dir.setObjectName("Button_in_dir")
        self.label_in_dir = QtWidgets.QLabel(self.tab_options)
        self.label_in_dir.setGeometry(QtCore.QRect(20, 230, 151, 20))
        self.label_in_dir.setObjectName("label_in_dir")
        self.lineEdit_in_dir = QtWidgets.QLineEdit(self.tab_options)
        self.lineEdit_in_dir.setGeometry(QtCore.QRect(20, 250, 311, 20))
        self.lineEdit_in_dir.setObjectName("lineEdit_in_dir")
        self.tabWidget_variables.addTab(self.tab_options, "")
        self.tab_about = QtWidgets.QWidget()
        self.tab_about.setObjectName("tab_about")
        self.label_logo_Mercator = QtWidgets.QLabel(self.tab_about)
        self.label_logo_Mercator.setGeometry(QtCore.QRect(20, 400, 101, 101))
        self.label_logo_Mercator.setObjectName("label_logo_Mercator")
        self.label_logo = QtWidgets.QLabel(self.tab_about)
        self.label_logo.setGeometry(QtCore.QRect(370, 429, 141, 51))
        self.label_logo.setObjectName("label_logo")
        self.textEdit_about = QtWidgets.QTextEdit(self.tab_about)
        self.textEdit_about.setGeometry(QtCore.QRect(70, 40, 421, 331))
        self.textEdit_about.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.textEdit_about.setAcceptDrops(False)
        self.textEdit_about.setAutoFillBackground(False)
        self.textEdit_about.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.textEdit_about.setFrameShadow(QtWidgets.QFrame.Plain)
        self.textEdit_about.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textEdit_about.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textEdit_about.setObjectName("textEdit_about")
        self.tabWidget_variables.addTab(self.tab_about, "")
        self.tabWidget_files = QtWidgets.QTabWidget(NetCDF2GISDialogBase)
        self.tabWidget_files.setGeometry(QtCore.QRect(10, 70, 401, 561))
        self.tabWidget_files.setObjectName("tabWidget_files")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.Button_supress_file = QtWidgets.QPushButton(self.tab)
        self.Button_supress_file.setGeometry(QtCore.QRect(60, 10, 41, 23))
        self.Button_supress_file.setObjectName("Button_supress_file")
        self.tableWidget_files = QtWidgets.QTableWidget(self.tab)
        self.tableWidget_files.setEnabled(True)
        self.tableWidget_files.setGeometry(QtCore.QRect(0, 40, 391, 491))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tableWidget_files.sizePolicy().hasHeightForWidth())
        self.tableWidget_files.setSizePolicy(sizePolicy)
        self.tableWidget_files.setAcceptDrops(True)
        self.tableWidget_files.setFrameShape(QtWidgets.QFrame.Box)
        self.tableWidget_files.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.tableWidget_files.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustIgnored)
        self.tableWidget_files.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tableWidget_files.setProperty("showDropIndicator", False)
        self.tableWidget_files.setDragDropOverwriteMode(False)
        self.tableWidget_files.setDragDropMode(QtWidgets.QAbstractItemView.DropOnly)
        self.tableWidget_files.setDefaultDropAction(QtCore.Qt.LinkAction)
        self.tableWidget_files.setAlternatingRowColors(True)
        self.tableWidget_files.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tableWidget_files.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.tableWidget_files.setTextElideMode(QtCore.Qt.ElideNone)
        self.tableWidget_files.setGridStyle(QtCore.Qt.NoPen)
        self.tableWidget_files.setCornerButtonEnabled(False)
        self.tableWidget_files.setObjectName("tableWidget_files")
        self.tableWidget_files.setColumnCount(3)
        self.tableWidget_files.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_files.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_files.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_files.setHorizontalHeaderItem(2, item)
        self.tableWidget_files.horizontalHeader().setCascadingSectionResizes(True)
        self.tableWidget_files.horizontalHeader().setDefaultSectionSize(70)
        self.tableWidget_files.horizontalHeader().setMinimumSectionSize(20)
        self.tableWidget_files.horizontalHeader().setStretchLastSection(True)
        self.tableWidget_files.verticalHeader().setVisible(False)
        self.tableWidget_files.verticalHeader().setHighlightSections(False)
        self.tableWidget_files.verticalHeader().setStretchLastSection(False)
        self.Button_add_file = QtWidgets.QPushButton(self.tab)
        self.Button_add_file.setGeometry(QtCore.QRect(10, 10, 41, 23))
        self.Button_add_file.setObjectName("Button_add_file")
        self.tabWidget_files.addTab(self.tab, "")
        self.tab_layers = QtWidgets.QWidget()
        self.tab_layers.setObjectName("tab_layers")
        self.tableWidget_layers = QtWidgets.QTableWidget(self.tab_layers)
        self.tableWidget_layers.setEnabled(True)
        self.tableWidget_layers.setGeometry(QtCore.QRect(0, 10, 391, 521))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tableWidget_layers.sizePolicy().hasHeightForWidth())
        self.tableWidget_layers.setSizePolicy(sizePolicy)
        self.tableWidget_layers.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tableWidget_layers.setAcceptDrops(False)
        self.tableWidget_layers.setFrameShape(QtWidgets.QFrame.Box)
        self.tableWidget_layers.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.tableWidget_layers.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.tableWidget_layers.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tableWidget_layers.setProperty("showDropIndicator", False)
        self.tableWidget_layers.setDragDropOverwriteMode(False)
        self.tableWidget_layers.setDragDropMode(QtWidgets.QAbstractItemView.DropOnly)
        self.tableWidget_layers.setDefaultDropAction(QtCore.Qt.LinkAction)
        self.tableWidget_layers.setAlternatingRowColors(False)
        self.tableWidget_layers.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.tableWidget_layers.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.tableWidget_layers.setTextElideMode(QtCore.Qt.ElideNone)
        self.tableWidget_layers.setGridStyle(QtCore.Qt.NoPen)
        self.tableWidget_layers.setCornerButtonEnabled(False)
        self.tableWidget_layers.setObjectName("tableWidget_layers")
        self.tableWidget_layers.setColumnCount(4)
        self.tableWidget_layers.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_layers.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_layers.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_layers.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_layers.setHorizontalHeaderItem(3, item)
        self.tableWidget_layers.horizontalHeader().setCascadingSectionResizes(True)
        self.tableWidget_layers.horizontalHeader().setDefaultSectionSize(50)
        self.tableWidget_layers.horizontalHeader().setMinimumSectionSize(30)
        self.tableWidget_layers.horizontalHeader().setStretchLastSection(True)
        self.tableWidget_layers.verticalHeader().setVisible(False)
        self.tableWidget_layers.verticalHeader().setHighlightSections(False)
        self.tableWidget_layers.verticalHeader().setStretchLastSection(False)
        self.tabWidget_files.addTab(self.tab_layers, "")
        self.label_bg = QtWidgets.QLabel(NetCDF2GISDialogBase)
        self.label_bg.setGeometry(QtCore.QRect(0, 0, 971, 671))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_bg.sizePolicy().hasHeightForWidth())
        self.label_bg.setSizePolicy(sizePolicy)
        self.label_bg.setText("")
        self.label_bg.setObjectName("label_bg")
        self.label_bg.raise_()
        self.label_title.raise_()
        self.Button_quit.raise_()
        self.message_bottom_display.raise_()
        self.Button_clear_bottom_line.raise_()
        self.tabWidget_variables.raise_()
        self.tabWidget_files.raise_()

        self.retranslateUi(NetCDF2GISDialogBase)
        self.tabWidget_variables.setCurrentIndex(0)
        self.tabWidget_files.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(NetCDF2GISDialogBase)

    def retranslateUi(self, NetCDF2GISDialogBase):
        _translate = QtCore.QCoreApplication.translate
        NetCDF2GISDialogBase.setWindowTitle(_translate("NetCDF2GISDialogBase", "NetCDF2GIS"))
        self.label_title.setToolTip(_translate("NetCDF2GISDialogBase", "<html><head/><body><p/></body></html>"))
        self.label_title.setText(_translate("NetCDF2GISDialogBase", "<html><head/><body><p><span style=\" font-size:14pt; color:#aa0000;\">CMEMS NetCDF File Management</span></p></body></html>"))
        self.Button_quit.setToolTip(_translate("NetCDF2GISDialogBase", "<html><head/><body><p>Close the window and quit the application</p></body></html>"))
        self.Button_quit.setText(_translate("NetCDF2GISDialogBase", "Quit"))
        self.message_bottom_display.setToolTip(_translate("NetCDF2GISDialogBase", "<html><head/><body><p>Message line</p></body></html>"))
        self.message_bottom_display.setText(_translate("NetCDF2GISDialogBase", "..."))
        self.Button_clear_bottom_line.setToolTip(_translate("NetCDF2GISDialogBase", "<html><head/><body><p>Clear the bottom message line</p></body></html>"))
        self.Button_clear_bottom_line.setWhatsThis(_translate("NetCDF2GISDialogBase", "mettre la ligne de commentaire à zéro"))
        self.tabWidget_variables.setToolTip(_translate("NetCDF2GISDialogBase", "<html><head/><body><p><br/></p></body></html>"))
        self.tableWidget_variables.setToolTip(_translate("NetCDF2GISDialogBase", "<html><head/><body><p>NetCDF Variables</p></body></html>"))
        self.tableWidget_variables.setSortingEnabled(True)
        item = self.tableWidget_variables.horizontalHeaderItem(0)
        item.setText(_translate("NetCDF2GISDialogBase", "Name"))
        item = self.tableWidget_variables.horizontalHeaderItem(1)
        item.setText(_translate("NetCDF2GISDialogBase", "Dimensions"))
        item = self.tableWidget_variables.horizontalHeaderItem(2)
        item.setText(_translate("NetCDF2GISDialogBase", "Unit"))
        item = self.tableWidget_variables.horizontalHeaderItem(3)
        item.setText(_translate("NetCDF2GISDialogBase", "Long name"))
        self.tabWidget_variables.setTabText(self.tabWidget_variables.indexOf(self.tab_variables), _translate("NetCDF2GISDialogBase", "Variables"))
        self.textBrowser_metadata.setToolTip(_translate("NetCDF2GISDialogBase", "<html><head/><body><p>NetCDF Metadata</p></body></html>"))
        self.textBrowser_metadata.setHtml(_translate("NetCDF2GISDialogBase", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.tabWidget_variables.setTabText(self.tabWidget_variables.indexOf(self.tab_attributs), _translate("NetCDF2GISDialogBase", "Meta-data"))
        self.comboBox_projection.setToolTip(_translate("NetCDF2GISDialogBase", "<html><head/><body><p>Choose a Coordinate Reference System from the list</p></body></html>"))
        self.label_projection.setToolTip(_translate("NetCDF2GISDialogBase", "<html><head/><body><p>Choose a Coordinate Reference System from the list</p></body></html>"))
        self.label_projection.setText(_translate("NetCDF2GISDialogBase", "Projection:"))
        self.lineEdit_temp_dir.setToolTip(_translate("NetCDF2GISDialogBase", "<html><head/><body><p>Select the temp directory</p></body></html>"))
        self.label_temp_dir.setToolTip(_translate("NetCDF2GISDialogBase", "<html><head/><body><p>Select the temp directory</p></body></html>"))
        self.label_temp_dir.setText(_translate("NetCDF2GISDialogBase", "Temp directory"))
        self.Button_temp_dir.setToolTip(_translate("NetCDF2GISDialogBase", "<html><head/><body><p>Select the temp directory</p></body></html>"))
        self.Button_temp_dir.setText(_translate("NetCDF2GISDialogBase", "..."))
        self.Button_clean_temp.setToolTip(_translate("NetCDF2GISDialogBase", "<html><head/><body><p>Delete temporary files from the temp directory</p></body></html>"))
        self.Button_clean_temp.setText(_translate("NetCDF2GISDialogBase", "Clean Temp"))
        self.lineEdit_out_dir.setToolTip(_translate("NetCDF2GISDialogBase", "<html><head/><body><p>Select the output directory</p></body></html>"))
        self.label_out_dir.setToolTip(_translate("NetCDF2GISDialogBase", "<html><head/><body><p>Select the temp directory</p></body></html>"))
        self.label_out_dir.setText(_translate("NetCDF2GISDialogBase", "Save default directory"))
        self.Button_out_dir.setToolTip(_translate("NetCDF2GISDialogBase", "<html><head/><body><p>Select the output directory</p></body></html>"))
        self.Button_out_dir.setText(_translate("NetCDF2GISDialogBase", "..."))
        self.Button_in_dir.setToolTip(_translate("NetCDF2GISDialogBase", "<html><head/><body><p>Select the input directory</p></body></html>"))
        self.Button_in_dir.setText(_translate("NetCDF2GISDialogBase", "..."))
        self.label_in_dir.setToolTip(_translate("NetCDF2GISDialogBase", "<html><head/><body><p>Select the temp directory</p></body></html>"))
        self.label_in_dir.setText(_translate("NetCDF2GISDialogBase", "Input default directory"))
        self.lineEdit_in_dir.setToolTip(_translate("NetCDF2GISDialogBase", "<html><head/><body><p>Select the input directory</p></body></html>"))
        self.tabWidget_variables.setTabText(self.tabWidget_variables.indexOf(self.tab_options), _translate("NetCDF2GISDialogBase", "Options"))
        self.label_logo_Mercator.setText(_translate("NetCDF2GISDialogBase", "logo"))
        self.label_logo.setText(_translate("NetCDF2GISDialogBase", "logo"))
        self.textEdit_about.setHtml(_translate("NetCDF2GISDialogBase", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">The Copernicus Marine Service (or Copernicus Marine Environment Monitoring Service) is the marine component of the Copernicus Programme of the European Union. </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">It provides free, regular and systematic authoritative information and data about the state of the Blue (physical), White (sea ice) and Green (biogeochemical) ocean on a global and regional scale. </span><span style=\" font-family:\'Calibri,sans-serif\'; font-size:10pt;\">Funded by the </span><span style=\" font-family:\'Calibri,sans-serif\'; font-size:10pt; font-weight:600;\">European Commission</span><span style=\" font-family:\'Calibri,sans-serif\'; font-size:10pt;\"> (EC) and implemented by </span><span style=\" font-family:\'Calibri,sans-serif\'; font-size:10pt; font-weight:600;\">Mercator Ocean International</span><span style=\" font-family:\'Calibri,sans-serif\'; font-size:10pt;\">, its goal is to serve EU policies and International legal Commitments related to Ocean Governance, to cater for the needs of society for global ocean knowledge and to boost the Blue Economy across all maritime sectors by providing free-of-charge state-of-the-art ocean data and information.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:10pt;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Calibri,sans-serif\'; font-size:10pt;\">The CMEMS data are available at: </span><a href=\"https://resources.marine.copernicus.eu\"><span style=\" font-size:8pt; text-decoration: underline; color:#0000ff;\">https://resources.marine.copernicus.eu</span></a></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:10pt;\"><br /></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:10pt;\"><br /></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:10pt;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">This sofware was developped for Mercator Ocean by Noveltis.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:10pt;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">Release date: May 2021</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:10pt;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">version: 1.0</span></p></body></html>"))
        self.tabWidget_variables.setTabText(self.tabWidget_variables.indexOf(self.tab_about), _translate("NetCDF2GISDialogBase", "About"))
        self.Button_supress_file.setToolTip(_translate("NetCDF2GISDialogBase", "<html><head/><body><p>Remove NetCDF from the list</p></body></html>"))
        self.Button_supress_file.setText(_translate("NetCDF2GISDialogBase", "-"))
        self.tableWidget_files.setToolTip(_translate("NetCDF2GISDialogBase", "<html><head/><body><p>Select a NetCDF file with single click</p></body></html>"))
        self.tableWidget_files.setSortingEnabled(False)
        item = self.tableWidget_files.horizontalHeaderItem(0)
        item.setText(_translate("NetCDF2GISDialogBase", "#"))
        item = self.tableWidget_files.horizontalHeaderItem(1)
        item.setText(_translate("NetCDF2GISDialogBase", "Name"))
        item = self.tableWidget_files.horizontalHeaderItem(2)
        item.setText(_translate("NetCDF2GISDialogBase", "Path"))
        self.Button_add_file.setToolTip(_translate("NetCDF2GISDialogBase", "<html><head/><body><p>Add a NetCDF file</p></body></html>"))
        self.Button_add_file.setText(_translate("NetCDF2GISDialogBase", "+"))
        self.tabWidget_files.setTabText(self.tabWidget_files.indexOf(self.tab), _translate("NetCDF2GISDialogBase", "NetCDF"))
        self.tableWidget_layers.setToolTip(_translate("NetCDF2GISDialogBase", "<html><head/><body><p>Select multiple layers with &quot;Ctrl&quot; and &quot;Maj&quot; keys</p></body></html>"))
        self.tableWidget_layers.setSortingEnabled(True)
        item = self.tableWidget_layers.horizontalHeaderItem(0)
        item.setText(_translate("NetCDF2GISDialogBase", "Name"))
        item = self.tableWidget_layers.horizontalHeaderItem(1)
        item.setText(_translate("NetCDF2GISDialogBase", "Group"))
        item = self.tableWidget_layers.horizontalHeaderItem(2)
        item.setText(_translate("NetCDF2GISDialogBase", "NC #"))
        item = self.tableWidget_layers.horizontalHeaderItem(3)
        item.setText(_translate("NetCDF2GISDialogBase", "Path"))
        self.tabWidget_files.setTabText(self.tabWidget_files.indexOf(self.tab_layers), _translate("NetCDF2GISDialogBase", "Layers"))
